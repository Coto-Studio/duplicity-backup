---
# tasks file for duplicity-backup
- name: Ensure duplicity is not installed
  become: true
  package:
    name: duplicity
    state: absent

- name: Ensure dependency packages are installed
  become: true
  package:
    name:
      - build-essential
      - intltool
      - lftp
      - librsync-dev
      - libffi-dev
      - libssl-dev
      - openssl
      - par2
      - python3-dev
      - python3-pip
      - python3-venv
      - python3
      - rclone
      - rsync
      - rdiff
      - tzdata
    state: present

- name: Ensure required python3 packages are installed
  pip:
    name:
      - botocore
      - boto3
      - b2sdk
      - pipx
    state: latest

- name: Ensure duplicity is installed
  community.general.pipx:
    name: duplicity
    global: true
    state: latest

- name: Ensure env file config is present
  template:
    src: templates/duplicity-envs.j2
    dest: "{{ duplicity_working_dir }}/{{ duplicity_env_file }}"
    owner: root
    mode: "0600"

- name: Ensure include-list is present
  template:
    src: templates/include-list.j2
    dest: "{{ duplicity_working_dir }}/{{ duplicity_include_file }}"
    owner: root
    mode: "0600"

- name: Ensure backup script is present
  template:
    src: templates/duplicity-script-backup.j2
    dest: "{{ duplicity_working_dir }}/{{ duplicity_backup_script }}"
    mode: u+rx

- name: Ensure restore script is present
  template:
    src: templates/duplicity-script-restore.j2
    dest: "{{ duplicity_working_dir }}/{{ duplicity_restore_script }}"
    mode: u+rx

- name: Ensure cronjob is present
  ansible.builtin.cron:
    name: "run duplicity backup"
    weekday: "{{ duplicity_cron_weekday | default(omit)}}"
    minute: "{{ duplicity_cron_minute | default('0')}}"
    hour: "{{ duplicity_cron_hour | default('0')}}"
    user: root
    state: present
    job: "{{ duplicity_working_dir }}/{{ duplicity_backup_script }}"
  when: duplicity_backup_script

- name: Set duplicity_dest
  set_fact:
    duplicity_dest: "b2://{{ duplicity_key_id }}:{{ duplicity_access_key }}@{{ duplicity_bucket }}/{{ ansible_nodename | regex_replace('.', '-') }}/duplicity"
  when: duplicity_run_full_backup

- name: Run full backup
  command:
    cmd: |
      duplicity \
      --include-filelist {{ duplicity_working_dir }}/{{ duplicity_include_file }} \
      / {{ duplicity_dest }}
  when: duplicity_run_full_backup

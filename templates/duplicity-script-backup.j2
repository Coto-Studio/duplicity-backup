#!/bin/bash
## Script to backup files to b2
## Based off of: https://davidkeen.com/blog/2017/09/backup-your-server-to-backblaze-b2-with-duplicity/

# Export some ENV variables so you don't have to type anything
source {{duplicity_working_dir}}/{{ duplicity_env_file }}
export $(cut -d= -f1 {{duplicity_working_dir}}/{{ duplicity_env_file }})

# The b2 destination
BUCKET_DIR=$(/usr/bin/hostname -f | /usr/bin/sed 's/\./-/g')
DEST="b2://$KEY_ID:$ACCESS_KEY@$BUCKET/$BUCKET_DIR"

# Set up some variables for logging
LOGDIR="/var/log/duplicity/"
LOGFILE="$LOGDIR/backup.log"
DAILYLOGFILE="$LOGDIR/backup.daily.log"
FULLBACKLOGFILE="$LOGDIR/backup.full.log"
INCLUDELIST="{{duplicity_working_dir}}/{{ duplicity_include_file }}"
HOST=`hostname`
DATE=`date +%Y-%m-%d`
TODAY=$(date +%d%m%Y)

is_running=$(ps -ef | grep duplicity  | grep python | wc -l)

if [ ! -d  ];then
  mkdir -p /var/log/duplicity
fi

if [ ! -f $FULLBACKLOGFILE ]; then
  touch $FULLBACKLOGFILE
fi

if [ $is_running -eq 0 ]; then
  # Clear the old daily log file
  cat /dev/null > ${DAILYLOGFILE}

  # Trace function for logging, don't change this
  trace () {
    stamp=`date +%Y-%m-%d_%H:%M:%S`
    echo "$stamp: $*" >> ${DAILYLOGFILE}
  }

  # How long to keep backups for
  OLDER_THAN="{{ duplicity_keep_backups_for }}"

  # The source of your backup
  SOURCE=/

  trace "Backup for local filesystem started"
  trace "------------------------------------"

  trace "Backing up files..."
  duplicity \
    --full-if-older-than 7D \
    --include-filelist ${INCLUDELIST} \
    ${SOURCE} ${DEST} >> ${DAILYLOGFILE} 2>&1

  trace "Verifying files..."
  duplicity verify ${DEST} ${SOURCE}

  trace "Removing old backups..."
  duplicity remove-older-than ${OLDER_THAN} --force ${DEST} >> ${DAILYLOGFILE} 2>&1

  trace "Backup for local filesystem complete"
  trace "------------------------------------"
 
  # Send the daily log file by email
  cat "$DAILYLOGFILE" | mail -s "Duplicity Backup Log for $HOST - $DATE" $MAILADDR
  BACKUPSTATUS=`cat "$DAILYLOGFILE" | grep Errors | awk '{ print $2 }'`
  if [ "$BACKUPSTATUS" != "0" ]; then
   cat "$DAILYLOGFILE" | mail -s "Duplicity Backup Log for $HOST - $DATE" $MAILADDR
  elif [ "$FULL" = "full" ]; then
    echo "$(date +%d%m%Y_%T) Full Back Done" >> $FULLBACKLOGFILE
  fi
  
  # Append the daily log file to the main log file
  cat "$DAILYLOGFILE" >> $LOGFILE

  # Reset the ENV variables. Don't need them sitting around
  unset $(cut -d= -f1 {{duplicity_working_dir}}/{{ duplicity_env_file }})
fi